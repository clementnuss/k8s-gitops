---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless-ngx
  namespace: appl-n8r
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
    timeout: 10m
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
    timeout: 10m
  uninstall:
    keepHistory: false
  values:
    controllers:
      paperless-ngx:
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.14.7
            env:
              TZ: "Europe/Zurich"
              PAPERLESS_REDIS: "redis://localhost:6379"
              PAPERLESS_TIME_ZONE: "Europe/Zurich"
              PAPERLESS_OCR_LANGUAGE: "eng"
              PAPERLESS_URL: "https://paperless.n8r.ch"
            envFrom:
              - secretRef:
                  name: paperless-ngx-secret
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 512Mi

          redis:
            image:
              repository: redis
              tag: 8-alpine
            resources:
              requests:
                cpu: 50m
                memory: 64Mi
              limits:
                memory: 128Mi

    service:
      main:
        type: ClusterIP
        controller: paperless-ngx
        ports:
          http:
            port: 8000

    ingress:
      main:
        enabled: true
        className: "nginx"
        hosts:
          - host: paperless.n8r.ch
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - "paperless.n8r.ch"

    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        size: 5Gi
        accessMode: ReadWriteOnce
        globalMounts:
          - path: /usr/src/paperless/data

      media:
        enabled: true
        type: persistentVolumeClaim
        size: 10Gi
        accessMode: ReadWriteOnce
        globalMounts:
          - path: /usr/src/paperless/media

      consume:
        enabled: true
        type: persistentVolumeClaim
        size: 2Gi
        accessMode: ReadWriteOnce
        globalMounts:
          - path: /usr/src/paperless/consume

      export:
        enabled: true
        type: persistentVolumeClaim
        size: 2Gi
        accessMode: ReadWriteOnce
        globalMounts:
          - path: /usr/src/paperless/export

